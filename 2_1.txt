몽고디비 연결하기

var db;
MongoClient.connect('접속URL', { useUnifiedTopology: true }, function (에러, client) {
	if (에러) return console.log(에러)
	db = client.db('todoapp');

	app.listen(8080, function () {
		console.log('listening on 8080')
	});
});


콜렉션에 자료 추가하기

위 코드의 중간에

db.collection('post').insertOne( {이름 : 'John', _id : 100} , function(에러, 결과){
	    console.log('저장완료'); 
	});

코드를 추가한다.

콜렉션중에 'post'이름의 콜렉션을 선택하고
insertOne()함수로 데이터를 저장한다.

ejs 파일 만들기
html 파일과 같다.
다른점이라면 중간중간 ejs문법으로 데이터를 입력시킬 수 있다.

# ejs파일은 views 폴더 안에 있어야만한다.

ejs 기본적인 문법

<%= user.name %>
html 중간중간에 서버 데이터를 집어넣고 싶으면 <%%> 기호를 사용한다.
그러면 html 글자로 렌더링이 된다.

ejs문법을 사용하면 자바스크립트 문법도 사용 가능하다.

<% if (user) { %>
  <h2><%= user.name %></h2>
<% } %>

html에 if문을 적용하거나 반복문을 적용하고 싶으면 <% %> 내부에
자바스크립트 문법을 적으면 된다.

mongodb에서 데이터를 꺼내고 싶다면
db.collection('post').find()
db.collection('post').findOne()

post콜렉션에 저장된 모든 데이터를 가져오자
라고 한다면

app.get('/list', function(req, res){
    .collection('post').find().toArray(function(err, result){
        console.log('result')
        res.render('list.ejs')
    })
})

.find().toArray()라고 함수를 사용하면 post컬렉션에 있는
모든 데이터를 array 자료형으로 가져온다.

데이터를 list.ejs 파일에 보내고 싶다면?

res.render('list.ejs', {posts : result})
.render() 함수에 둘째 파라미터를 적는다.
list.ejs파일을 렌더링함과 동시에 {post:result}라는 데이터를 함깨 보낼 수 있다.
